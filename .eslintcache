[{"D:\\it_camasutra2\\website\\src\\index.js":"1","D:\\it_camasutra2\\website\\src\\App.js":"2","D:\\it_camasutra2\\website\\src\\reportWebVitals.js":"3","D:\\it_camasutra2\\website\\src\\components\\header\\Header.jsx":"4","D:\\it_camasutra2\\website\\src\\components\\header\\HeLogo\\Logo.jsx":"5","D:\\it_camasutra2\\website\\src\\components\\header\\HeSearch\\Search.jsx":"6","D:\\it_camasutra2\\website\\src\\components\\header\\HeMenu\\Menu.jsx":"7","D:\\it_camasutra2\\website\\src\\components\\NavBar\\NavBar.jsx":"8","D:\\it_camasutra2\\website\\src\\components\\Profile\\Profile.jsx":"9","D:\\it_camasutra2\\website\\src\\components\\Profile\\Post\\Post.jsx":"10","D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfAva\\ProfAva.jsx":"11","D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfInfo\\ProfInfo.jsx":"12","D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfPosts\\ProfPosts.jsx":"13","D:\\it_camasutra2\\website\\src\\components\\Messages\\Messages.jsx":"14","D:\\it_camasutra2\\website\\src\\components\\Messages\\Sender\\Sender.jsx":"15","D:\\it_camasutra2\\website\\src\\components\\Messages\\Send\\Send.jsx":"16","D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfFriends\\Friends.jsx":"17","D:\\it_camasutra2\\website\\src\\components\\Profile\\Friend\\Friend.jsx":"18","D:\\it_camasutra2\\website\\src\\redux\\MessagesReducer.js":"19","D:\\it_camasutra2\\website\\src\\redux\\ProfileReducer.js":"20","D:\\it_camasutra2\\website\\src\\redux\\store.js":"21","D:\\it_camasutra2\\website\\src\\redux\\redux-store.js":"22","D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfPosts\\ProfPostsContainer.jsx":"23","D:\\it_camasutra2\\website\\src\\components\\Messages\\MessagesContainer.jsx":"24","D:\\it_camasutra2\\website\\src\\redux\\UsersReducer.js":"25","D:\\it_camasutra2\\website\\src\\components\\Users\\UsersContainer.jsx":"26","D:\\it_camasutra2\\website\\src\\components\\Users\\Users.jsx":"27","D:\\it_camasutra2\\website\\src\\redux\\SerchReducer.js":"28","D:\\it_camasutra2\\website\\src\\components\\header\\HeSearch\\SearchContainer.jsx":"29","D:\\it_camasutra2\\website\\src\\components\\common\\PreLoader\\PreLoader.jsx":"30","D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfileContainer.jsx":"31","D:\\it_camasutra2\\website\\src\\redux\\HeaderReducer.js":"32","D:\\it_camasutra2\\website\\src\\components\\header\\HeaderContainer.jsx":"33","D:\\it_camasutra2\\website\\src\\redux\\AuthReducer.js":"34","D:\\it_camasutra2\\website\\src\\components\\API\\API.js":"35","D:\\it_camasutra2\\website\\src\\components\\LoginPage\\Login.jsx":"36","D:\\it_camasutra2\\website\\src\\hoc\\witchRedirect.js":"37"},{"size":318,"mtime":1610106827058,"results":"38","hashOfConfig":"39"},{"size":1106,"mtime":1611053844232,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":589,"mtime":1612169336994,"results":"42","hashOfConfig":"39"},{"size":412,"mtime":1609709609236,"results":"43","hashOfConfig":"39"},{"size":685,"mtime":1610301139223,"results":"44","hashOfConfig":"39"},{"size":1867,"mtime":1612465247931,"results":"45","hashOfConfig":"39"},{"size":611,"mtime":1610112433013,"results":"46","hashOfConfig":"39"},{"size":1064,"mtime":1612366523179,"results":"47","hashOfConfig":"39"},{"size":595,"mtime":1609886949718,"results":"48","hashOfConfig":"39"},{"size":820,"mtime":1612350679568,"results":"49","hashOfConfig":"39"},{"size":5317,"mtime":1612464784439,"results":"50","hashOfConfig":"39"},{"size":945,"mtime":1610034730849,"results":"51","hashOfConfig":"39"},{"size":1519,"mtime":1610107112020,"results":"52","hashOfConfig":"39"},{"size":497,"mtime":1609692696209,"results":"53","hashOfConfig":"39"},{"size":385,"mtime":1609694244669,"results":"54","hashOfConfig":"39"},{"size":440,"mtime":1609947366411,"results":"55","hashOfConfig":"39"},{"size":396,"mtime":1609714060304,"results":"56","hashOfConfig":"39"},{"size":1840,"mtime":1610043433479,"results":"57","hashOfConfig":"39"},{"size":4322,"mtime":1612432617735,"results":"58","hashOfConfig":"39"},{"size":2661,"mtime":1609937941817,"results":"59","hashOfConfig":"39"},{"size":753,"mtime":1610793085231,"results":"60","hashOfConfig":"39"},{"size":760,"mtime":1610015727926,"results":"61","hashOfConfig":"39"},{"size":902,"mtime":1611571065804,"results":"62","hashOfConfig":"39"},{"size":3356,"mtime":1611051262734,"results":"63","hashOfConfig":"39"},{"size":1290,"mtime":1610800157704,"results":"64","hashOfConfig":"39"},{"size":2292,"mtime":1611050473710,"results":"65","hashOfConfig":"39"},{"size":1434,"mtime":1610301627880,"results":"66","hashOfConfig":"39"},{"size":2146,"mtime":1610301615812,"results":"67","hashOfConfig":"39"},{"size":248,"mtime":1610286929732,"results":"68","hashOfConfig":"39"},{"size":2374,"mtime":1612432835842,"results":"69","hashOfConfig":"39"},{"size":549,"mtime":1610315110556,"results":"70","hashOfConfig":"39"},{"size":846,"mtime":1612170803947,"results":"71","hashOfConfig":"39"},{"size":928,"mtime":1611053632303,"results":"72","hashOfConfig":"39"},{"size":1812,"mtime":1612365938655,"results":"73","hashOfConfig":"39"},{"size":146,"mtime":1611927198532,"results":"74","hashOfConfig":"39"},{"size":615,"mtime":1612366051280,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78","usedDeprecatedRules":"79"},"w3wcvw",{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"79"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"79"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"79"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"79"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"79"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"79"},"D:\\it_camasutra2\\website\\src\\index.js",["166"],"import store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\n\n  ReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n    document.getElementById('root')\n  );\n\n",["167","168"],"D:\\it_camasutra2\\website\\src\\App.js",["169","170"],"import './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\nimport NavBar from './components/NavBar/NavBar';\nimport MessagesContainer from './components/Messages/MessagesContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/header/HeaderContainer';\nimport Login from './components/LoginPage/Login';\n\nfunction App(props) {\n  \n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <HeaderContainer />\n        <div className='BodyWrapper'>\n          <NavBar />\n          <Route exat path='/Profile/:userID?'\n            render={() => <ProfileContainer />} />\n          <Route path='/Messages'\n            render={() => <MessagesContainer />} />\n            <Route path='/Login'\n            render={() => <Login />} />\n            <Route path='/Users'\n            render={() => <UsersContainer />} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\it_camasutra2\\website\\src\\reportWebVitals.js",[],["171","172"],"D:\\it_camasutra2\\website\\src\\components\\header\\Header.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\header\\HeLogo\\Logo.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\header\\HeSearch\\Search.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\header\\HeMenu\\Menu.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\NavBar\\NavBar.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\Profile\\Profile.jsx",["173","174"],"import React from 'react'\r\nimport Style from './Profile.module.css'\r\nimport Ava from './ProfAva/ProfAva';\r\nimport Info from './ProfInfo/ProfInfo';\r\nimport Friends from './ProfFriends/Friends';\r\nimport PostsContainer from './ProfPosts/ProfPostsContainer';\r\nimport PreLoader from './../common/PreLoader/PreLoader';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={Style.ProfileWrapper}>\r\n            <Ava photos={props.profile.photos.large}\r\n            profileImage={props.profileImage}\r\n            setNewPrfileImage={props.setNewPrfileImage}/>\r\n            <Info profile={props.profile}\r\n            status={props.status}\r\n            reductAccpet={props.reductAccpet}\r\n            userID={props.userID}\r\n            updateStatus={props.updateStatus}\r\n            statusChange={props.statusChange} \r\n            statusValue={props.statusValue}/>\r\n            <PostsContainer store={props.store}/>\r\n            {/* <Friends\r\n                FriendData={state.profilePage.FriendData} /> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","D:\\it_camasutra2\\website\\src\\components\\Profile\\Post\\Post.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfAva\\ProfAva.jsx",["175","176"],"import React from 'react'\r\nimport Style from './ProfAva.module.css'\r\n\r\nconst Ava = (props) => {\r\n    let ImageData = ({})\r\n    let uploadImage =(e)=>{\r\n        ImageData.append(\"image\", e.target.files[0]);\r\n        props.setNewPrfileImage(ImageData)\r\n    }\r\n    return (\r\n        <div className={Style.AvatarWrapper}>\r\n            <img src={props.photos} alt=\"\" className={Style.profImg} />\r\n            {props.profileImage\r\n                ? <div className={Style.butt}>\r\n                    <a type=\"file\" name=\"\" id=\"\" />Изменить</div>\r\n                : <input\r\n                    className={Style.butt}\r\n                    type=\"file\"\r\n                    accept=\"image/x-png,image/gif,image/jpeg\"\r\n                    onChange={(e)=> {uploadImage(e)}} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ava;","D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfInfo\\ProfInfo.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfPosts\\ProfPosts.jsx",["177"],"import React from 'react'\r\nimport Style from './ProfPosts.module.css'\r\nimport Post from './../Post/Post';\r\n\r\nconst Posts = (props) => {\r\n    \r\n    let OnAddPost = () => {   \r\n        props.addPost()\r\n    }\r\n    let onPostChang = (e) => {\r\n        let text = e.target.value;\r\n        props.uppdatePost(text)\r\n    }\r\n    let PostSplit = props.PostDate.map(con => <Post dispatch={props.dispatch} key={con.id} a={con.m} id={con.id}/>)\r\n    return (\r\n        <div className={Style.Posts}>\r\n            <div className={Style.CreatePost}>\r\n                <textarea\r\n                    onChange={onPostChang}\r\n                    value={props.newPostText} />\r\n                <a className={Style.butt}\r\n                    onClick={OnAddPost}>Опубликовать</a>\r\n            </div>\r\n            <div className={Style.PostWrapper}>\r\n                <div>{PostSplit}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","D:\\it_camasutra2\\website\\src\\components\\Messages\\Messages.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\Messages\\Sender\\Sender.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\Messages\\Send\\Send.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfFriends\\Friends.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\Profile\\Friend\\Friend.jsx",[],"D:\\it_camasutra2\\website\\src\\redux\\MessagesReducer.js",[],"D:\\it_camasutra2\\website\\src\\redux\\ProfileReducer.js",["178","179"],"D:\\it_camasutra2\\website\\src\\redux\\store.js",[],"D:\\it_camasutra2\\website\\src\\redux\\redux-store.js",[],"D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfPosts\\ProfPostsContainer.jsx",["180"],"import React from 'react'\r\nimport { addPostActionCreactor, uppdatePostTextActionCreater } from '../../../redux/ProfileReducer';\r\nimport Posts from './ProfPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        PostDate: state.profilePage.PostDate,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        uppdatePost: (text) =>{\r\n            dispatch(uppdatePostTextActionCreater(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreactor())\r\n        },\r\n        dispatch: dispatch\r\n    }\r\n}\r\n\r\n\r\nconst PostsContainer = connect(mapStateToProps,mapDispatchToProps)(Posts)\r\n\r\nexport default PostsContainer;","D:\\it_camasutra2\\website\\src\\components\\Messages\\MessagesContainer.jsx",["181"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { uppdateNewMessageActionCreater, addessageActionCreactor } from '../../redux/MessagesReducer';\r\nimport Messages from './Messages';\r\nimport { withAuthRedirect } from './../../hoc/witchRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        SenderDate: state.messagesPage.SenderDate,\r\n        SendsData: state.messagesPage.SendsData,\r\n        newMessage: state.messagesPage.newMessage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: ()=>{\r\n            dispatch(addessageActionCreactor())\r\n        },\r\n        uppdateNewMessage: (mess)=>{\r\n            dispatch(uppdateNewMessageActionCreater(mess))\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messages)\r\n","D:\\it_camasutra2\\website\\src\\redux\\UsersReducer.js",["182"],"import { API } from './../components/API/API';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst IS_SERCH = \"IS_SERCH\"\r\nconst IS_BUTTON_FOLLOW_CLICK = \"IS_BUTTON_FOLLOW_CLICK\"\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    currentPage: 0,\r\n    totalUsersCount: 5,\r\n    isSerch: true,\r\n    toggleFollowButt: false,\r\n    followChoose: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case IS_SERCH:\r\n            return {\r\n                ...state,\r\n                isSerch: action.isSerchValue,\r\n                users: []\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case IS_BUTTON_FOLLOW_CLICK:\r\n            \r\n            return {\r\n                ...state,\r\n                followChoose: action.toggleFollowButt\r\n                ? [...state.followChoose, action.userID]\r\n                : state.followChoose.filter(id => id != action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport const getUsers = () => {\r\n    return (dispatch) => {\r\n        dispatch(isSerch(true));\r\n        API.getUsersAPI().then(data => {\r\n            dispatch(isSerch(false))\r\n            dispatch(setUsers(data.items));\r\n        })\r\n    }\r\n}\r\nexport const unfollowTC = (userID) => {\r\n    \r\n    return (dispatch) => {\r\n        dispatch(onFollowButtClick(true,userID))\r\n        API.unFollowAPI(userID).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(onFollowButtClick(false,userID))\r\n                dispatch(unfollow(userID))\r\n            }\r\n        });\r\n    }\r\n}\r\nexport const setNewUsers = (page) => {\r\n    return (dispatch) => {\r\n        dispatch(isSerch(true))\r\n        API.getUserAPI(page).then(data => {\r\n            dispatch(isSerch(false))\r\n            dispatch(setUsers(data.items));\r\n        });\r\n    }\r\n}\r\nexport const followTC = (userID) => {\r\n    return (dispatch) => {\r\n        dispatch(onFollowButtClick(true,userID))\r\n        API.followAPI(userID).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(onFollowButtClick(false,userID))\r\n                dispatch(follow(userID))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const follow = (id) => ({ type: FOLLOW, id })\r\n\r\nexport const unfollow = (id) => ({ type: UNFOLLOW, id })\r\n\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\n\r\nexport const onFollowButtClick = (toggleFollowButt,userID) => ({ type: IS_BUTTON_FOLLOW_CLICK, toggleFollowButt,userID })\r\n\r\nexport const isSerch = (isSerchValue) => ({ type: IS_SERCH, isSerchValue })\r\n","D:\\it_camasutra2\\website\\src\\components\\Users\\UsersContainer.jsx",["183"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { setNewUsers , unfollowTC, followTC, getUsers } from '../../redux/UsersReducer';\r\nimport Users from './Users';\r\n\r\nclass UsersContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.props.getUsers()\r\n    }\r\n    render() {\r\n        return <>\r\n            <Users totalCount={this.props.totalCount}\r\n                users={this.props.users}\r\n                followTC={this.props.followTC}\r\n                unfollowTC={this.props.unfollowTC}\r\n                setNewUsers={this.props.setNewUsers}\r\n                serchValue={this.props.serchValue}\r\n                toggleFollowButt={this.props.toggleFollowButt}\r\n                followChoose={this.props.followChoose}\r\n                 />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalCount: state.usersPage.totalUsersCount,\r\n        serchValue: state.usersPage.isSerch,\r\n        toggleFollowButt: state.usersPage.toggleFollowButt,\r\n        followChoose: state.usersPage.followChoose\r\n    }\r\n}\r\nexport default connect(mapStateToProps,\r\n    { getUsers, unfollowTC, followTC, setNewUsers })(UsersContainer);","D:\\it_camasutra2\\website\\src\\components\\Users\\Users.jsx",[],"D:\\it_camasutra2\\website\\src\\redux\\SerchReducer.js",[],"D:\\it_camasutra2\\website\\src\\components\\header\\HeSearch\\SearchContainer.jsx",["184","185","186"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addSerchResultAC, isFetchingSerchAC, serchChangeAC } from '../../../redux/SerchReducer';\r\nimport Search from './Search';\r\nimport { dellSerchTextAC } from './../../../redux/SerchReducer';\r\nimport axios from 'axios';\r\n\r\n\r\nclass SearchContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    // componentDidUpdate(text) {\r\n    //     this.props.toggleIsFetching(true)\r\n    //     axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=5&term=${text}`)\r\n    //         .then(response => {\r\n    //             this.props.toggleIsFetching(false)\r\n    //             this.props.resultSerchItems(response.data.items)\r\n    //             console.log(response.data.items)\r\n    //         });\r\n    // }\r\n    render() {\r\n        let newSerchV = (text) => {\r\n            this.props.onSerchChange(text)\r\n        }\r\n        let dellSerchText = () => {\r\n            this.props.onBlurSerchText()\r\n        }\r\n        let onSerchRes = () => {\r\n          this.props.serchResult.map( (e)=> {\r\n              <div>{e.name}</div>\r\n          })\r\n        }\r\n        return <Search \r\n        newSerchV={newSerchV}\r\n        dellSerchText={dellSerchText}\r\n        newSerchValue= {this.props.newSerchValue}\r\n        onSerchRes={onSerchRes}\r\n        isFetching={this.props.isFetching} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newSerchValue: state.SerchPage.newSerchValue,\r\n        serchResult: state.SerchPage.serchResult,\r\n        isFetching: state.SerchPage.isFetching\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSerchChange: (newSerchText) => {\r\n            dispatch(serchChangeAC(newSerchText))\r\n        },\r\n        onBlurSerchText: () => {\r\n          dispatch(dellSerchTextAC())\r\n        },\r\n        resultSerchItems: (result) => {\r\n          dispatch(addSerchResultAC(result))\r\n        },\r\n        toggleIsFetching: () => {\r\n          dispatch(isFetchingSerchAC())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer);\r\n\r\n","D:\\it_camasutra2\\website\\src\\components\\common\\PreLoader\\PreLoader.jsx",[],"D:\\it_camasutra2\\website\\src\\components\\Profile\\ProfileContainer.jsx",["187"],"import React from 'react'\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile,setNewPrfileImage,updateStatus,\r\n     statusChange, getStatus, reductAccpetChange } from '../../redux/ProfileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PreLoader from './../common/PreLoader/PreLoader';\r\nimport { profileAPI } from '../API/API';\r\nimport { withAuthRedirect } from '../../hoc/witchRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        debugger\r\n        let userID = this.props.match.params.userID\r\n        if (!userID) {\r\n            userID = this.props.userID;\r\n            this.props.reductAccpetChange(true)\r\n        }else{\r\n            this.props.reductAccpetChange(false)\r\n        }\r\n        profileAPI.getUsersProfile(userID).then(response => {\r\n            this.props.setUserProfile(response.data)\r\n        });\r\n        this.props.getStatus(userID)\r\n    }\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <PreLoader />\r\n        }\r\n        return (\r\n            <>\r\n                <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                userID ={this.props.userID}\r\n                profileImage={this.props.profileImage}\r\n                status={this.props.status}\r\n                statusChange={this.props.statusChange}\r\n                reductAccpet={this.props.reductAccpet} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        status: state.profilePage.status,\r\n        statusValue: state.profilePage.statusText,\r\n        profileImage: state.profilePage.profileImage,\r\n        userID: state.auth.id,\r\n        profile: state.profilePage.profile,\r\n        reductAccpet: state.profilePage.reductAccpet        \r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { setUserProfile, setNewPrfileImage,\r\n         updateStatus, statusChange, getStatus, reductAccpetChange }),\r\n    withRouter\r\n)(AuthRedirectComponent)\r\n// let WitchURLDateContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n//  connect(mapStateToProps, { setUserProfile, setNewPrfileImage })(WitchURLDateContainerComponent);","D:\\it_camasutra2\\website\\src\\redux\\HeaderReducer.js",[],"D:\\it_camasutra2\\website\\src\\components\\header\\HeaderContainer.jsx",["188","189"],"import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux';\r\nimport { isHeaderMenuClick } from \"../../redux/HeaderReducer\";\r\nimport { getUsersData } from \"../../redux/AuthReducer\";\r\nimport { profileAPI } from './../API/API';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n        this.props.getUsersData()\r\n    }\r\n    render() {\r\n        return (\r\n            <Header profileImage={this.props.profileImage}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        userID: state.auth.id,\r\n        toggleMenuClick: state.headerPage.toggleMenuClick\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {isHeaderMenuClick,getUsersData})(HeaderContainer);","D:\\it_camasutra2\\website\\src\\redux\\AuthReducer.js",[],"D:\\it_camasutra2\\website\\src\\components\\API\\API.js",["190"],"import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        \"api-key\": \"c6c9dbd4-a1d3-4e39-bd19-e1390e9bd37b\"\r\n    },\r\n\r\n})\r\nexport const API = {\r\n    unFollowAPI: (id) => {\r\n        return instance.delete(`follow/${id}`, {\r\n        }).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    followAPI: (id) => {\r\n        return instance.post(`follow/${id}`, {\r\n        }).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getUserAPI: (p) => {\r\n        return instance.get(`users?page=${p}&count=20`, {\r\n        }).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getUsersAPI: () => {\r\n        return instance.get(`users?count=20`, {\r\n        }).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getUsersAPI: () => {\r\n        return instance.get(`users?count=20`, {\r\n        }).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\nexport const authUserData = {\r\n    getAuthData: () => {\r\n        return instance.get(`auth/me`, {}).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getUsersProfile: (userid) => {\r\n        return instance.get(`profile/${userid}`)\r\n    },\r\n    updateUserImage: (newImage) => {\r\n        return instance.post(`profile/photo`, newImage, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n    },\r\n    updateStatus: (status) => {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    getStatus: (userID) => {\r\n        debugger\r\n        return instance.get(`profile/status/` + userID)\r\n    }\r\n}","D:\\it_camasutra2\\website\\src\\components\\LoginPage\\Login.jsx",[],"D:\\it_camasutra2\\website\\src\\hoc\\witchRedirect.js",["191"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const withAuthRedirect = (Component) => {\r\n    class RredirectComponent extends React.Component {\r\n        render() {\r\n            // if (!this.props.isAuth) return <Redirect to={\"/Login\"} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RredirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n",{"ruleId":"192","severity":1,"message":"193","line":12,"column":18,"nodeType":"194","messageId":"195","endLine":12,"endColumn":19,"fix":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":33},{"ruleId":"201","severity":1,"message":"205","line":3,"column":42,"nodeType":"203","messageId":"204","endLine":3,"endColumn":49},{"ruleId":"197","replacedBy":"206"},{"ruleId":"199","replacedBy":"207"},{"ruleId":"201","severity":1,"message":"208","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":15},{"ruleId":"201","severity":1,"message":"209","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":15,"column":21,"nodeType":"212","endLine":15,"endColumn":52},{"ruleId":"213","severity":1,"message":"214","line":15,"column":21,"nodeType":"212","endLine":15,"endColumn":52},{"ruleId":"213","severity":1,"message":"214","line":21,"column":17,"nodeType":"212","endLine":22,"endColumn":41},{"ruleId":"215","severity":1,"message":"216","line":52,"column":35,"nodeType":"217","messageId":"218","endLine":52,"endColumn":37},{"ruleId":"219","severity":1,"message":"220","line":65,"column":9,"nodeType":"221","messageId":"222","endLine":70,"endColumn":10},{"ruleId":"201","severity":1,"message":"223","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":13},{"ruleId":"201","severity":1,"message":"223","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":56,"column":54,"nodeType":"217","messageId":"218","endLine":56,"endColumn":56},{"ruleId":"224","severity":1,"message":"225","line":7,"column":5,"nodeType":"226","messageId":"227","endLine":10,"endColumn":6},{"ruleId":"201","severity":1,"message":"228","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":10,"column":5,"nodeType":"226","messageId":"227","endLine":13,"endColumn":6},{"ruleId":"229","severity":1,"message":"230","line":31,"column":42,"nodeType":"231","messageId":"232","endLine":31,"endColumn":44},{"ruleId":"224","severity":1,"message":"225","line":13,"column":5,"nodeType":"226","messageId":"227","endLine":15,"endColumn":6},{"ruleId":"201","severity":1,"message":"233","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":9,"column":5,"nodeType":"226","messageId":"227","endLine":11,"endColumn":6},{"ruleId":"234","severity":1,"message":"235","line":36,"column":5,"nodeType":"236","messageId":"218","endLine":36,"endColumn":16},{"ruleId":"201","severity":1,"message":"237","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":18},"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"238","text":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.",["240"],["241"],"'Friends' is defined but never used.","'PreLoader' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'React' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'profileAPI' is defined but never used.","no-dupe-keys","Duplicate key 'getUsersAPI'.","ObjectExpression","'Redirect' is defined but never used.",[274,280],"\n    .","no-global-assign","no-unsafe-negation"]